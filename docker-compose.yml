version: '3.8'

services:
  targeting-engine:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      - SERVER_PORT=8080
      - METRICS_ENABLED=true
      - METRICS_PORT=9090
      - CACHE_TTL=5m
      - CACHE_CLEANUP_INTERVAL=10m
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_RPS=1000
      - RATE_LIMIT_BURST=2000
    networks:
      - targeting-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - targeting-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - targeting-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # Load testing tool (optional)
  k6:
    image: grafana/k6:latest
    profiles:
      - testing
    volumes:
      - ./test/load:/scripts
    command: run /scripts/load-test.js
    networks:
      - targeting-network
    depends_on:
      - targeting-engine

networks:
  targeting-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: